"update"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Updates a PrivilegedApiControl.


Usage
=====

   oci apiaccesscontrol privileged-api-control update [OPTIONS]


Required Parameters
===================

--privileged-api-control-id [text]

The OCID of the PrivilegedApiControl.


Optional Parameters
===================

--approver-group-id-list [complex type]

List of user IAM group ids who can approve an privilegedApi request
associated with a target resource under the governance of this
privilegedApi control. This is a complex type whose value must be
valid JSON. The value can be provided as a string on the command line
or passed in as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--defined-tags [complex type]

Defined tags for this resource. Each key is predefined and scoped to a
namespace. For more information, see Resource Tags.

Example:

   {"Operations": {"CostCenter": "42"}}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--description [text]

Description of the privilegedApi control.

--display-name [text]

Name of the privilegedApi control. Needs to be unique.

--force

Perform update without prompting for confirmation.

--freeform-tags [complex type]

Free-form tags for this resource. Each tag is a simple key-value pair
with no predefined name, type, or namespace. For more information, see
Resource Tags.

Example:

   {"Department": "Finance"}

This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--if-match [text]

For optimistic concurrency control. In the PUT or DELETE call for a
resource, set the *if-match* parameter to the value of the etag from a
previous GET or POST response for that resource. The resource will be
updated or deleted only if the etag you provide matches the resource’s
current etag value.

--max-wait-seconds [integer]

The maximum time to wait for the work request to reach the state
defined by "--wait-for-state". Defaults to 1200 seconds.

--notification-topic-id [text]

The OCID of the OCI Notification topic to publish messages related to
this Delegation Control.

--number-of-approvers [integer]

Number of approvers required to approve an privilegedApi request.

--privileged-operation-list [complex type]

List of privileged operator operations. If Privileged API Managment is
enabled for a resource it will be validated whether the operation done
by the operator is a part of privileged operation.

This option is a JSON list with items of type PrivilegedApiDetails.
For documentation on PrivilegedApiDetails please see our API
reference: https://docs.cloud.oracle.com/api/#/en/privilegedapicontro
l/20241130/datatypes/PrivilegedApiDetails. This is a complex type
whose value must be valid JSON. The value can be provided as a string
on the command line or passed in as a file using the
file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--resource-type [text]

resourceType for which the PrivilegedApiControl is applicable

--resources [complex type]

contains Resource details This is a complex type whose value must be
valid JSON. The value can be provided as a string on the command line
or passed in as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--wait-for-state [text]

This operation asynchronously creates, modifies or deletes a resource
and uses a work request to track the progress of the operation.
Specify this option to perform the action and then wait until the work
request reaches a certain state. Multiple states can be specified,
returning on the first state. For example, "--wait-for-state"
SUCCEEDED "--wait-for-state" FAILED would return on whichever
lifecycle state is reached first. If timeout is reached, a return code
of 2 is returned. For any other error, a return code of 1 is returned.

Accepted values are:

   ACCEPTED, CANCELED, CANCELING, FAILED, IN_PROGRESS, NEEDS_ATTENTION, SUCCEEDED, WAITING

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the work request
has reached the state defined by "--wait-for-state". Defaults to 30
seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy and paste the following example into a JSON file, replacing the
example parameters with your own.

       oci apiaccesscontrol privileged-api-control create --generate-param-json-input approver-group-id-list > approver-group-id-list.json
       oci apiaccesscontrol privileged-api-control create --generate-param-json-input privileged-operation-list > privileged-operation-list.json
       oci apiaccesscontrol privileged-api-control create --generate-param-json-input resources > resources.json

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export compartment_id=<substitute-value-of-compartment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/apiaccesscontrol/privileged-api-control/create.html#cmdoption-compartment-id
       export notification_topic_id=<substitute-value-of-notification_topic_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/apiaccesscontrol/privileged-api-control/create.html#cmdoption-notification-topic-id
       export resource_type=<substitute-value-of-resource_type> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/apiaccesscontrol/privileged-api-control/create.html#cmdoption-resource-type

       privileged_api_control_id=$(oci apiaccesscontrol privileged-api-control create --approver-group-id-list file://approver-group-id-list.json --compartment-id $compartment_id --notification-topic-id $notification_topic_id --privileged-operation-list file://privileged-operation-list.json --resource-type $resource_type --resources file://resources.json --query data.id --raw-output)

       oci apiaccesscontrol privileged-api-control update --privileged-api-control-id $privileged_api_control_id
